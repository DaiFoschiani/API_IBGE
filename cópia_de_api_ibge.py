# -*- coding: utf-8 -*-
"""Cópia de API_IBGE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WDxidNfAN0z82oa1bIfBk0IuWVgRWN0O

Abaixo importamos as bibliotecas necessárias:
requests para fazer a requisição HTTP e acessar a API.
json para manipular os dados JSON que a API retorna.
pandas para converter os dados JSON em um DataFrame, facilitando a análise.
"""

import requests
import json
import pandas as pd

"""HTTP (Hypertext Transfer Protocol) é o protocolo de comunicação que é usado para transferir dados entre o cliente (seu código) e o servidor (API). O formato dos dados que são transferidos, nesse caso, é JSON.

Portanto, o HTTP é o meio de transporte, enquanto o JSON é o formato dos dados que estão sendo transmitidos. O seu código está fazendo uma requisição HTTP para obter os dados em JSON da API.
"""

# URL da API do IBGE coom dados da tabela que é suada no Power bI
url = "https://apisidra.ibge.gov.br/values/t/5938/n1/all/v/37,498,513,517,525,543,6575/p/all/d/v37%200,v498%200,v513%200,v517%200,v525%200,v543%200,v6575%200?formato=json"

# Fazer a requisição GET para obter os dados da API
response = requests.get(url)

"""esse trecho de código abaixo está verificando se a requisição HTTP foi bem-sucedida:

if response.status_code == 200:: Verifica se o status da resposta é 200, o que indica sucesso. data = response.json(): Se a requisição for bem-sucedida, os dados retornados são convertidos de JSON para um objeto Python (geralmente um dicionário ou lista). print(json.dumps(data, indent=4)): Exibe os dados formatados de forma legível. else:: Se a requisição falhar, imprime uma mensagem de erro com o código de status.
"""

# Verificar se a requisição foi bem-sucedida
if response.status_code == 200:
    data = response.json()

response = requests.get(url)

if response.status_code == 200:
    data = response.json()
    if isinstance(data, list): #Aqui, verificamos se data é uma lista. No caso de dados do IBGE, geralmente é uma lista de dicionários, onde cada dicionário representa um registro ou linha da tabela de dados. Se data não fosse uma lista, precisávamos ajustar o código para lidar com outra estrutura.

        df = pd.DataFrame(data) #Se data é uma lista, usamos pd.DataFrame(data) para converter os dados em um DataFrame do Pandas, o que facilita a manipulação e análise dos dados.
        print(df.head()) #df.head() para exibir as primeiras linhas do DataFrame
    else:
        print("A estrutura dos dados não é uma lista de dicionários.")
else:
    print(f"Erro na requisição: {response.status_code}")

# Exporta o DataFrame para um arquivo Excel
df.to_excel('dados_ibge.xlsx', index=False)

#baixá-lo diretamente do Colab para o seu computador usando:
from google.colab import files
files.download('dados_ibge.xlsx')

# Verifica o número de linhas do DataFrame
numero_de_linhas = df.shape[0]
print(f"O número de linhas é: {numero_de_linhas}")